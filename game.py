import sounddevice as sd
import numpy as np
import scipy.io.wavfile as wav
import speech_recognition as sr
from googletrans import Translator
import random

print("üéÆ –ò–≥—Ä–∞: –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ —Å —Ä—É—Å—Å–∫–æ–≥–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π üéÆ")
print('–≠—Ç–æ –∏–≥—Ä–∞ –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Ç–≤–æ–π –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤ —Å —Ä—É—Å—Å–∫–æ–≥–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π.')
print("–£ —Ç–µ–±—è –µ—Å—Ç—å 3 –∂–∏–∑–Ω–∏. –û—à–∏–±–∏—Ç—å—Å—è –º–æ–∂–Ω–æ 3 —Ä–∞–∑–∞.\n")

words_by_level = {
    "easy": ["–∫–æ—Ç", "—Å–æ–±–∞–∫–∞", "—è–±–ª–æ–∫–æ", "–º–æ–ª–æ–∫–æ", "—Å–æ–ª–Ω—Ü–µ"],
    "medium": ["–±–∞–Ω–∞–Ω", "—à–∫–æ–ª–∞", "–¥—Ä—É–≥", "–æ–∫–Ω–æ", "–∂—ë–ª—Ç—ã–π"],
    "hard": ["—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è", "—É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç", "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ", "–≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ"]
}


while True:
    diff = input('–ö–∞–∫–æ–π —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Ç—ã –≤—ã–±–µ—Ä–µ—à—å? –£—Ä–æ–≤–Ω–∏: easy, medium, hard: ').lower()
    if diff in words_by_level:
        break
    print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏!")

lives = 3
score = 0

while lives > 0:
    
    current_word = random.choice(words_by_level[diff])
    
    duration = 5  # —Å–µ–∫—É–Ω–¥—ã –∑–∞–ø–∏—Å–∏
    sample_rate = 44100

    print(f"\n–ü–µ—Ä–µ–≤–µ–¥–∏ —Å–ª–æ–≤–æ: '{current_word}' –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫.")
    print("–ó–∞–ø–∏—Å—ã–≤–∞—é —Ç–≤–æ–π –æ—Ç–≤–µ—Ç...")
    
    try:
        recording = sd.rec(
            int(duration * sample_rate),
            samplerate=sample_rate,
            channels=1,
            dtype="int16"
        )
        sd.wait()  # –∂–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏

        wav.write("output.wav", sample_rate, recording)
        print("–ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Ç–µ–ø–µ—Ä—å —Ä–∞—Å–ø–æ–∑–Ω–∞—ë–º...")

        recognizer = sr.Recognizer()
        with sr.AudioFile("output.wav") as source:
            audio = recognizer.record(source)

        try:
            text = recognizer.recognize_google(audio, language="en-US")
            print("–¢—ã —Å–∫–∞–∑–∞–ª:", text)

            translator = Translator()
            translated = translator.translate(text, src='en', dest='ru')
            
            
            if translated.text.lower().strip() == current_word.lower().strip():
                print('‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!')
                score += 1
            else:
                lives -= 1
                print(f'‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥: {translator.translate(current_word, src="ru", dest="en").text}')
                print(f'–û—Å—Ç–∞–ª–æ—Å—å –∂–∏–∑–Ω–µ–π: {lives}')
                
        except sr.UnknownValueError:
            lives -= 1
            print("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å.")
            print(f'–û—Å—Ç–∞–ª–æ—Å—å –∂–∏–∑–Ω–µ–π: {lives}')
        except sr.RequestError as e:
            lives -= 1
            print(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: {e}")
            print(f'–û—Å—Ç–∞–ª–æ—Å—å –∂–∏–∑–Ω–µ–π: {lives}')

    except Exception as e:
        lives -= 1
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏: {e}")
        print(f'–û—Å—Ç–∞–ª–æ—Å—å –∂–∏–∑–Ω–µ–π: {lives}')

print(f"\n–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –¢–≤–æ–π —Å—á–µ—Ç: {score}")